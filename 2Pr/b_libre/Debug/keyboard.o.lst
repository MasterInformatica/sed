   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"keyboard.c"
  21              	.Ltext0:
  22              		.file 1 "../keyboard.c"
 1955              		.align	2
 1958              	keyboard_base:
 1959 0000 00000006 		.word	100663296
 1960              		.comm	key,4,4
 1961              		.text
 1962              		.align	2
 1963              		.global	keyboard_init
 1965              	keyboard_init:
 1966              	.LFB0:
   1:../keyboard.c **** /*--- Ficheros de cabecera ---*/
   2:../keyboard.c **** #include "44b.h"
   3:../keyboard.c **** #include "44blib.h"
   4:../keyboard.c **** #include "def.h"
   5:../keyboard.c **** 
   6:../keyboard.c **** /*--- Definición de macros ---*/
   7:../keyboard.c **** #define KEY_VALUE_MASK 0xF
   8:../keyboard.c **** 
   9:../keyboard.c **** /*--- Variables globales ---*/
  10:../keyboard.c **** volatile UCHAR *keyboard_base = (UCHAR *)0x06000000;
  11:../keyboard.c **** int key;
  12:../keyboard.c **** 
  13:../keyboard.c **** /*--- Funciones externas ---*/
  14:../keyboard.c **** void D8Led_symbol(int value);
  15:../keyboard.c **** 
  16:../keyboard.c **** /*--- Declaracion de funciones ---*/
  17:../keyboard.c **** void keyboard_init();
  18:../keyboard.c **** void Keyboard_ISR(void) __attribute__ ((interrupt ("IRQ")));
  19:../keyboard.c **** 
  20:../keyboard.c **** 
  21:../keyboard.c **** extern luz;
  22:../keyboard.c **** extern st;
  23:../keyboard.c **** 
  24:../keyboard.c **** /*--- Codigo de las funciones ---*/
  25:../keyboard.c **** void keyboard_init()
  26:../keyboard.c **** {
 1967              		.loc 1 26 0
 1968              		.cfi_startproc
 1969              		@ Function supports interworking.
 1970              		@ args = 0, pretend = 0, frame = 0
 1971              		@ frame_needed = 1, uses_anonymous_args = 0
 1972 0000 0DC0A0E1 		mov	ip, sp
 1973              	.LCFI0:
 1974              		.cfi_def_cfa_register 12
 1975 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1976 0008 04B04CE2 		sub	fp, ip, #4
 1977              		.cfi_offset 14, -8
 1978              		.cfi_offset 13, -12
 1979              		.cfi_offset 11, -16
 1980              	.LCFI1:
 1981              		.cfi_def_cfa 11, 4
  27:../keyboard.c **** 	/* Configurar el puerto G (si no lo estuviese ya) */	
  28:../keyboard.c **** 		// Establece la funcion de los pines (EINT0-7)
  29:../keyboard.c **** 		rPCONG = rPCONG | 0xC;
 1982              		.loc 1 29 0
 1983 000c 50309FE5 		ldr	r3, .L2
 1984 0010 4C209FE5 		ldr	r2, .L2
 1985 0014 002092E5 		ldr	r2, [r2, #0]
 1986 0018 0C2082E3 		orr	r2, r2, #12
 1987 001c 002083E5 		str	r2, [r3, #0]
  30:../keyboard.c **** 
  31:../keyboard.c **** 		// Habilita el "pull up" del puerto
  32:../keyboard.c **** 		rPUPG = 0x0;
 1988              		.loc 1 32 0
 1989 0020 40309FE5 		ldr	r3, .L2+4
 1990 0024 0020A0E3 		mov	r2, #0
 1991 0028 002083E5 		str	r2, [r3, #0]
  33:../keyboard.c **** 
  34:../keyboard.c **** 		// Configura las lineas de int. como de flanco de bajada mediante EXTINT
  35:../keyboard.c **** 		rEXTINT = rEXTINT | 0x00000030;
 1992              		.loc 1 35 0
 1993 002c 38309FE5 		ldr	r3, .L2+8
 1994 0030 34209FE5 		ldr	r2, .L2+8
 1995 0034 002092E5 		ldr	r2, [r2, #0]
 1996 0038 302082E3 		orr	r2, r2, #48
 1997 003c 002083E5 		str	r2, [r3, #0]
  36:../keyboard.c **** 
  37:../keyboard.c **** 		/* Establece la rutina de servicio para EINT1 */
  38:../keyboard.c **** 		pISR_EINT1 = (unsigned) Keyboard_ISR;
 1998              		.loc 1 38 0
 1999 0040 28309FE5 		ldr	r3, .L2+12
 2000 0044 28209FE5 		ldr	r2, .L2+16
 2001 0048 002083E5 		str	r2, [r3, #0]
  39:../keyboard.c **** 
  40:../keyboard.c **** 		// Borra INTPND escribiendo 1s en I_ISPC
  41:../keyboard.c **** 		rI_ISPC = BIT_EINT1;
 2002              		.loc 1 41 0
 2003 004c 24309FE5 		ldr	r3, .L2+20
 2004 0050 0124A0E3 		mov	r2, #16777216
 2005 0054 002083E5 		str	r2, [r3, #0]
  42:../keyboard.c **** 
  43:../keyboard.c **** }
 2006              		.loc 1 43 0
 2007 0058 0CD04BE2 		sub	sp, fp, #12
 2008 005c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2009 0060 1EFF2FE1 		bx	lr
 2010              	.L3:
 2011              		.align	2
 2012              	.L2:
 2013 0064 4000D201 		.word	30539840
 2014 0068 4800D201 		.word	30539848
 2015 006c 5000D201 		.word	30539856
 2016 0070 80FF7F0C 		.word	209715072
 2017 0074 00000000 		.word	Keyboard_ISR
 2018 0078 2400E001 		.word	31457316
 2019              		.cfi_endproc
 2020              	.LFE0:
 2022              		.align	2
 2023              		.global	keyboard_activar
 2025              	keyboard_activar:
 2026              	.LFB1:
  44:../keyboard.c **** 
  45:../keyboard.c **** void keyboard_activar(){
 2027              		.loc 1 45 0
 2028              		.cfi_startproc
 2029              		@ Function supports interworking.
 2030              		@ args = 0, pretend = 0, frame = 0
 2031              		@ frame_needed = 1, uses_anonymous_args = 0
 2032 007c 0DC0A0E1 		mov	ip, sp
 2033              	.LCFI2:
 2034              		.cfi_def_cfa_register 12
 2035 0080 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2036 0084 04B04CE2 		sub	fp, ip, #4
 2037              		.cfi_offset 14, -8
 2038              		.cfi_offset 13, -12
 2039              		.cfi_offset 11, -16
 2040              	.LCFI3:
 2041              		.cfi_def_cfa 11, 4
  46:../keyboard.c **** 	//borrar interrupciones pendientes
  47:../keyboard.c **** 	rI_ISPC = BIT_EINT1;
 2042              		.loc 1 47 0
 2043 0088 30309FE5 		ldr	r3, .L5
 2044 008c 0124A0E3 		mov	r2, #16777216
 2045 0090 002083E5 		str	r2, [r3, #0]
  48:../keyboard.c **** 
  49:../keyboard.c **** 	// Habilitar linea EINT1
  50:../keyboard.c **** 	rINTMSK = rINTMSK & ~( BIT_EINT1 );
 2046              		.loc 1 50 0
 2047 0094 28309FE5 		ldr	r3, .L5+4
 2048 0098 24209FE5 		ldr	r2, .L5+4
 2049 009c 002092E5 		ldr	r2, [r2, #0]
 2050 00a0 0124C2E3 		bic	r2, r2, #16777216
 2051 00a4 002083E5 		str	r2, [r3, #0]
  51:../keyboard.c **** 
  52:../keyboard.c **** 	//borrar interrupciones pendientes
  53:../keyboard.c **** 	rI_ISPC = BIT_EINT1;
 2052              		.loc 1 53 0
 2053 00a8 10309FE5 		ldr	r3, .L5
 2054 00ac 0124A0E3 		mov	r2, #16777216
 2055 00b0 002083E5 		str	r2, [r3, #0]
  54:../keyboard.c **** }
 2056              		.loc 1 54 0
 2057 00b4 0CD04BE2 		sub	sp, fp, #12
 2058 00b8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2059 00bc 1EFF2FE1 		bx	lr
 2060              	.L6:
 2061              		.align	2
 2062              	.L5:
 2063 00c0 2400E001 		.word	31457316
 2064 00c4 0C00E001 		.word	31457292
 2065              		.cfi_endproc
 2066              	.LFE1:
 2068              		.align	2
 2069              		.global	keyboard_desactivar
 2071              	keyboard_desactivar:
 2072              	.LFB2:
  55:../keyboard.c **** 
  56:../keyboard.c **** void keyboard_desactivar(){
 2073              		.loc 1 56 0
 2074              		.cfi_startproc
 2075              		@ Function supports interworking.
 2076              		@ args = 0, pretend = 0, frame = 0
 2077              		@ frame_needed = 1, uses_anonymous_args = 0
 2078 00c8 0DC0A0E1 		mov	ip, sp
 2079              	.LCFI4:
 2080              		.cfi_def_cfa_register 12
 2081 00cc 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2082 00d0 04B04CE2 		sub	fp, ip, #4
 2083              		.cfi_offset 14, -8
 2084              		.cfi_offset 13, -12
 2085              		.cfi_offset 11, -16
 2086              	.LCFI5:
 2087              		.cfi_def_cfa 11, 4
  57:../keyboard.c **** 	// Desabilitar linea EINT1
  58:../keyboard.c **** 	rINTMSK = rINTMSK | BIT_EINT1;
 2088              		.loc 1 58 0
 2089 00d4 24309FE5 		ldr	r3, .L8
 2090 00d8 20209FE5 		ldr	r2, .L8
 2091 00dc 002092E5 		ldr	r2, [r2, #0]
 2092 00e0 012482E3 		orr	r2, r2, #16777216
 2093 00e4 002083E5 		str	r2, [r3, #0]
  59:../keyboard.c **** 
  60:../keyboard.c **** 	//borrar interrupciones pendientes
  61:../keyboard.c **** 	rI_ISPC = BIT_EINT1;
 2094              		.loc 1 61 0
 2095 00e8 14309FE5 		ldr	r3, .L8+4
 2096 00ec 0124A0E3 		mov	r2, #16777216
 2097 00f0 002083E5 		str	r2, [r3, #0]
  62:../keyboard.c **** }
 2098              		.loc 1 62 0
 2099 00f4 0CD04BE2 		sub	sp, fp, #12
 2100 00f8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2101 00fc 1EFF2FE1 		bx	lr
 2102              	.L9:
 2103              		.align	2
 2104              	.L8:
 2105 0100 0C00E001 		.word	31457292
 2106 0104 2400E001 		.word	31457316
 2107              		.cfi_endproc
 2108              	.LFE2:
 2110              		.align	2
 2111              		.global	Keyboard_ISR
 2113              	Keyboard_ISR:
 2114              	.LFB3:
  63:../keyboard.c **** 
  64:../keyboard.c **** 
  65:../keyboard.c **** void Keyboard_ISR(void)
  66:../keyboard.c **** {
 2115              		.loc 1 66 0
 2116              		.cfi_startproc
 2117              		@ Interrupt Service Routine.
 2118              		@ args = 0, pretend = 0, frame = 8
 2119              		@ frame_needed = 1, uses_anonymous_args = 0
 2120 0108 04C02DE5 		str	ip, [sp, #-4]!
 2121 010c 0DC0A0E1 		mov	ip, sp
 2122              	.LCFI6:
 2123              		.cfi_def_cfa_register 12
 2124 0110 0FD82DE9 		stmfd	sp!, {r0, r1, r2, r3, fp, ip, lr, pc}
 2125 0114 04B04CE2 		sub	fp, ip, #4
 2126              		.cfi_offset 14, -8
 2127              		.cfi_offset 13, -12
 2128              		.cfi_offset 11, -16
 2129              		.cfi_offset 3, -20
 2130              		.cfi_offset 2, -24
 2131              		.cfi_offset 1, -28
 2132              		.cfi_offset 0, -32
 2133              	.LCFI7:
 2134              		.cfi_def_cfa 11, 4
 2135 0118 08D04DE2 		sub	sp, sp, #8
  67:../keyboard.c **** 	/* Esperar trp mediante la funcion DelayMs()*/
  68:../keyboard.c **** 	DelayMs(20);//trp=20ms
 2136              		.loc 1 68 0
 2137 011c 1400A0E3 		mov	r0, #20
 2138 0120 FEFFFFEB 		bl	DelayMs
  69:../keyboard.c **** 
  70:../keyboard.c **** 	/* Identificar la tecla */
  71:../keyboard.c **** 	int pulsado = key_read();
 2139              		.loc 1 71 0
 2140 0124 FEFFFFEB 		bl	key_read
 2141 0128 20000BE5 		str	r0, [fp, #-32]
  72:../keyboard.c **** 
  73:../keyboard.c **** 	if((pulsado == 0 && luz == 1) || //izq
 2142              		.loc 1 73 0
 2143 012c 20301BE5 		ldr	r3, [fp, #-32]
 2144 0130 000053E3 		cmp	r3, #0
 2145 0134 0300001A 		bne	.L11
 2146              		.loc 1 73 0 is_stmt 0 discriminator 1
 2147 0138 8C309FE5 		ldr	r3, .L17
 2148 013c 003093E5 		ldr	r3, [r3, #0]
 2149 0140 010053E3 		cmp	r3, #1
 2150 0144 0600000A 		beq	.L12
 2151              	.L11:
 2152              		.loc 1 73 0 discriminator 2
 2153 0148 20301BE5 		ldr	r3, [fp, #-32]
 2154 014c 010053E3 		cmp	r3, #1
 2155 0150 0C00001A 		bne	.L15
  74:../keyboard.c **** 	   (pulsado == 1 && luz == 2)) { //dcha
 2156              		.loc 1 74 0 is_stmt 1
 2157 0154 70309FE5 		ldr	r3, .L17
 2158 0158 003093E5 		ldr	r3, [r3, #0]
 2159 015c 020053E3 		cmp	r3, #2
 2160 0160 0A00001A 		bne	.L16
 2161              	.L12:
 2162              	.LBB2:
  75:../keyboard.c **** 
  76:../keyboard.c **** 		st = 5;
 2163              		.loc 1 76 0
 2164 0164 64309FE5 		ldr	r3, .L17+4
 2165 0168 0520A0E3 		mov	r2, #5
 2166 016c 002083E5 		str	r2, [r3, #0]
  77:../keyboard.c **** 		timer1_desactivar();
 2167              		.loc 1 77 0
 2168 0170 FEFFFFEB 		bl	timer1_desactivar
  78:../keyboard.c **** 
  79:../keyboard.c **** 		Eint4567_desactivar();
 2169              		.loc 1 79 0
 2170 0174 FEFFFFEB 		bl	Eint4567_desactivar
  80:../keyboard.c **** 		keyboard_desactivar();
 2171              		.loc 1 80 0
 2172 0178 FEFFFFEB 		bl	keyboard_desactivar
  81:../keyboard.c **** 		led2_on(); 					//Indicamos que ha ganado el jugador 2.
 2173              		.loc 1 81 0
 2174 017c FEFFFFEB 		bl	led2_on
  82:../keyboard.c **** 		timer2_activar();
 2175              		.loc 1 82 0
 2176 0180 FEFFFFEB 		bl	timer2_activar
 2177              	.LBE2:
  83:../keyboard.c **** 
  84:../keyboard.c **** 	}
  85:../keyboard.c **** 
  86:../keyboard.c **** 	/* Esperar a se libere la tecla: consultar bit 1 del registro de datos del puerto G */
  87:../keyboard.c **** 	while (!(rPDATG & 0x2)){}
 2178              		.loc 1 87 0
 2179 0184 020000EA 		b	.L14
 2180              	.L15:
 2181 0188 0000A0E1 		mov	r0, r0	@ nop
 2182 018c 000000EA 		b	.L14
 2183              	.L16:
 2184 0190 0000A0E1 		mov	r0, r0	@ nop
 2185              	.L14:
 2186              		.loc 1 87 0 is_stmt 0 discriminator 1
 2187 0194 38309FE5 		ldr	r3, .L17+8
 2188 0198 003093E5 		ldr	r3, [r3, #0]
 2189 019c 023003E2 		and	r3, r3, #2
 2190 01a0 000053E3 		cmp	r3, #0
 2191 01a4 FAFFFF0A 		beq	.L14
  88:../keyboard.c **** 
  89:../keyboard.c **** 	/* Esperar trd mediante la funcion Delay() */
  90:../keyboard.c **** 	DelayMs(100);//trd=100ms
 2192              		.loc 1 90 0 is_stmt 1
 2193 01a8 6400A0E3 		mov	r0, #100
 2194 01ac FEFFFFEB 		bl	DelayMs
  91:../keyboard.c **** 	/* Borrar interrupción de teclado */
  92:../keyboard.c **** 	rI_ISPC = BIT_EINT1;
 2195              		.loc 1 92 0
 2196 01b0 20309FE5 		ldr	r3, .L17+12
 2197 01b4 0124A0E3 		mov	r2, #16777216
 2198 01b8 002083E5 		str	r2, [r3, #0]
  93:../keyboard.c **** }
 2199              		.loc 1 93 0
 2200 01bc 1CD04BE2 		sub	sp, fp, #28
 2201 01c0 0F689DE8 		ldmfd	sp, {r0, r1, r2, r3, fp, sp, lr}
 2202 01c4 04C09DE4 		ldmfd	sp!, {ip}
 2203 01c8 04F05EE2 		subs	pc, lr, #4
 2204              	.L18:
 2205              		.align	2
 2206              	.L17:
 2207 01cc 00000000 		.word	luz
 2208 01d0 00000000 		.word	st
 2209 01d4 4400D201 		.word	30539844
 2210 01d8 2400E001 		.word	31457316
 2211              		.cfi_endproc
 2212              	.LFE3:
 2214              		.align	2
 2215              		.global	key_read
 2217              	key_read:
 2218              	.LFB4:
  94:../keyboard.c **** 
  95:../keyboard.c **** int key_read()
  96:../keyboard.c **** {
 2219              		.loc 1 96 0
 2220              		.cfi_startproc
 2221              		@ Function supports interworking.
 2222              		@ args = 0, pretend = 0, frame = 24
 2223              		@ frame_needed = 1, uses_anonymous_args = 0
 2224 01dc 0DC0A0E1 		mov	ip, sp
 2225              	.LCFI8:
 2226              		.cfi_def_cfa_register 12
 2227 01e0 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2228 01e4 04B04CE2 		sub	fp, ip, #4
 2229              		.cfi_offset 14, -8
 2230              		.cfi_offset 13, -12
 2231              		.cfi_offset 11, -16
 2232              	.LCFI9:
 2233              		.cfi_def_cfa 11, 4
 2234 01e8 18D04DE2 		sub	sp, sp, #24
  97:../keyboard.c **** 	short int i=0;
 2235              		.loc 1 97 0
 2236 01ec 0030A0E3 		mov	r3, #0
 2237 01f0 B2314BE1 		strh	r3, [fp, #-18]	@ movhi
  98:../keyboard.c **** 
  99:../keyboard.c **** 	int value= -1;
 2238              		.loc 1 99 0
 2239 01f4 0030E0E3 		mvn	r3, #0
 2240 01f8 10300BE5 		str	r3, [fp, #-16]
 100:../keyboard.c **** 	char temp;
 101:../keyboard.c **** 	// Identificar la tecla mediante ''scanning''
 102:../keyboard.c **** 	// Para el juego solo es necesario detectar las dos primeras teclas.
 103:../keyboard.c **** 
 104:../keyboard.c **** 	unsigned int offset[4] = {0xFD,0xFB,0xF7,0xEF};
 2241              		.loc 1 104 0
 2242 01fc D4309FE5 		ldr	r3, .L26
 2243 0200 24C04BE2 		sub	ip, fp, #36
 2244 0204 0F0093E8 		ldmia	r3, {r0, r1, r2, r3}
 2245 0208 0F008CE8 		stmia	ip, {r0, r1, r2, r3}
 105:../keyboard.c **** 
 106:../keyboard.c **** 	//for(i=0; i<1; i++){
 107:../keyboard.c **** 	temp = *(keyboard_base + (offset[i])) & KEY_VALUE_MASK;
 2246              		.loc 1 107 0
 2247 020c C8309FE5 		ldr	r3, .L26+4
 2248 0210 002093E5 		ldr	r2, [r3, #0]
 2249 0214 F2115BE1 		ldrsh	r1, [fp, #-18]
 2250 0218 1730E0E3 		mvn	r3, #23
 2251 021c 0111A0E1 		mov	r1, r1, asl #2
 2252 0220 0C004BE2 		sub	r0, fp, #12
 2253 0224 011080E0 		add	r1, r0, r1
 2254 0228 033081E0 		add	r3, r1, r3
 2255 022c 003093E5 		ldr	r3, [r3, #0]
 2256 0230 033082E0 		add	r3, r2, r3
 2257 0234 0030D3E5 		ldrb	r3, [r3, #0]
 2258 0238 FF3003E2 		and	r3, r3, #255
 2259 023c 0F3003E2 		and	r3, r3, #15
 2260 0240 13304BE5 		strb	r3, [fp, #-19]
 108:../keyboard.c **** 
 109:../keyboard.c **** 	switch (temp) {
 2261              		.loc 1 109 0
 2262 0244 13305BE5 		ldrb	r3, [fp, #-19]	@ zero_extendqisi2
 2263 0248 073043E2 		sub	r3, r3, #7
 2264 024c 070053E3 		cmp	r3, #7
 2265 0250 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 2266 0254 1A0000EA 		b	.L20
 2267              	.L25:
 2268 0258 78020000 		.word	.L21
 2269 025c C4020000 		.word	.L20
 2270 0260 C4020000 		.word	.L20
 2271 0264 C4020000 		.word	.L20
 2272 0268 88020000 		.word	.L22
 2273 026c C4020000 		.word	.L20
 2274 0270 9C020000 		.word	.L23
 2275 0274 B0020000 		.word	.L24
 2276              	.L21:
 110:../keyboard.c **** 		case 0x7:  value = 0 + (i*4); break;
 2277              		.loc 1 110 0
 2278 0278 F2315BE1 		ldrsh	r3, [fp, #-18]
 2279 027c 0331A0E1 		mov	r3, r3, asl #2
 2280 0280 10300BE5 		str	r3, [fp, #-16]
 2281 0284 0E0000EA 		b	.L20
 2282              	.L22:
 111:../keyboard.c **** 		case 0xB:  value = 1 + (i*4); break;
 2283              		.loc 1 111 0
 2284 0288 F2315BE1 		ldrsh	r3, [fp, #-18]
 2285 028c 0331A0E1 		mov	r3, r3, asl #2
 2286 0290 013083E2 		add	r3, r3, #1
 2287 0294 10300BE5 		str	r3, [fp, #-16]
 2288 0298 090000EA 		b	.L20
 2289              	.L23:
 112:../keyboard.c **** 		case 0xD:  value = 2 + (i*4); break;
 2290              		.loc 1 112 0
 2291 029c F2315BE1 		ldrsh	r3, [fp, #-18]
 2292 02a0 0331A0E1 		mov	r3, r3, asl #2
 2293 02a4 023083E2 		add	r3, r3, #2
 2294 02a8 10300BE5 		str	r3, [fp, #-16]
 2295 02ac 040000EA 		b	.L20
 2296              	.L24:
 113:../keyboard.c **** 		case 0xE:  value = 3 + (i*4); break;
 2297              		.loc 1 113 0
 2298 02b0 F2315BE1 		ldrsh	r3, [fp, #-18]
 2299 02b4 0331A0E1 		mov	r3, r3, asl #2
 2300 02b8 033083E2 		add	r3, r3, #3
 2301 02bc 10300BE5 		str	r3, [fp, #-16]
 2302 02c0 0000A0E1 		mov	r0, r0	@ nop
 2303              	.L20:
 114:../keyboard.c **** 	}
 115:../keyboard.c **** 	//}
 116:../keyboard.c **** 
 117:../keyboard.c **** 	return value;
 2304              		.loc 1 117 0
 2305 02c4 10301BE5 		ldr	r3, [fp, #-16]
 118:../keyboard.c **** 
 119:../keyboard.c **** 
 120:../keyboard.c **** }
 2306              		.loc 1 120 0
 2307 02c8 0300A0E1 		mov	r0, r3
 2308 02cc 0CD04BE2 		sub	sp, fp, #12
 2309 02d0 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2310 02d4 1EFF2FE1 		bx	lr
 2311              	.L27:
 2312              		.align	2
 2313              	.L26:
 2314 02d8 00000000 		.word	C.0.4734
 2315 02dc 00000000 		.word	keyboard_base
 2316              		.cfi_endproc
 2317              	.LFE4:
 2319              		.section	.rodata
 2320              		.align	2
 2323              	C.0.4734:
 2324 0000 FD000000 		.word	253
 2325 0004 FB000000 		.word	251
 2326 0008 F7000000 		.word	247
 2327 000c EF000000 		.word	239
 2328              		.text
 2329              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 keyboard.c
C:\Users\USUARI~1\AppData\Local\Temp\ccLRRm2W.s:1958   .data:00000000 keyboard_base
C:\Users\USUARI~1\AppData\Local\Temp\ccLRRm2W.s:1955   .data:00000000 $d
                            *COM*:00000004 key
C:\Users\USUARI~1\AppData\Local\Temp\ccLRRm2W.s:1962   .text:00000000 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccLRRm2W.s:1965   .text:00000000 keyboard_init
C:\Users\USUARI~1\AppData\Local\Temp\ccLRRm2W.s:2013   .text:00000064 $d
C:\Users\USUARI~1\AppData\Local\Temp\ccLRRm2W.s:2113   .text:00000108 Keyboard_ISR
C:\Users\USUARI~1\AppData\Local\Temp\ccLRRm2W.s:2022   .text:0000007c $a
C:\Users\USUARI~1\AppData\Local\Temp\ccLRRm2W.s:2025   .text:0000007c keyboard_activar
C:\Users\USUARI~1\AppData\Local\Temp\ccLRRm2W.s:2063   .text:000000c0 $d
C:\Users\USUARI~1\AppData\Local\Temp\ccLRRm2W.s:2068   .text:000000c8 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccLRRm2W.s:2071   .text:000000c8 keyboard_desactivar
C:\Users\USUARI~1\AppData\Local\Temp\ccLRRm2W.s:2105   .text:00000100 $d
C:\Users\USUARI~1\AppData\Local\Temp\ccLRRm2W.s:2110   .text:00000108 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccLRRm2W.s:2217   .text:000001dc key_read
C:\Users\USUARI~1\AppData\Local\Temp\ccLRRm2W.s:2207   .text:000001cc $d
C:\Users\USUARI~1\AppData\Local\Temp\ccLRRm2W.s:2214   .text:000001dc $a
C:\Users\USUARI~1\AppData\Local\Temp\ccLRRm2W.s:2268   .text:00000258 $d
C:\Users\USUARI~1\AppData\Local\Temp\ccLRRm2W.s:2278   .text:00000278 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccLRRm2W.s:2314   .text:000002d8 $d
C:\Users\USUARI~1\AppData\Local\Temp\ccLRRm2W.s:2323   .rodata:00000000 C.0.4734
C:\Users\USUARI~1\AppData\Local\Temp\ccLRRm2W.s:2320   .rodata:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
DelayMs
timer1_desactivar
Eint4567_desactivar
led2_on
timer2_activar
luz
st
