   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"keyboard.c"
  21              	.Ltext0:
  22              		.file 1 "../keyboard.c"
 1955              		.align	2
 1958              	keyboard_base:
 1959 0000 00000006 		.word	100663296
 1960              		.comm	key,4,4
 1961              		.text
 1962              		.align	2
 1963              		.global	keyboard_init
 1965              	keyboard_init:
 1966              	.LFB0:
   1:../keyboard.c **** /*--- Ficheros de cabecera ---*/
   2:../keyboard.c **** #include "44b.h"
   3:../keyboard.c **** #include "44blib.h"
   4:../keyboard.c **** #include "def.h"
   5:../keyboard.c **** 
   6:../keyboard.c **** /*--- Definición de macros ---*/
   7:../keyboard.c **** #define KEY_VALUE_MASK 0xF
   8:../keyboard.c **** 
   9:../keyboard.c **** /*--- Variables globales ---*/
  10:../keyboard.c **** volatile UCHAR *keyboard_base = (UCHAR *)0x06000000;
  11:../keyboard.c **** int key;
  12:../keyboard.c **** 
  13:../keyboard.c **** /*--- Funciones externas ---*/
  14:../keyboard.c **** void D8Led_symbol(int value);
  15:../keyboard.c **** 
  16:../keyboard.c **** /*--- Declaracion de funciones ---*/
  17:../keyboard.c **** void keyboard_init();
  18:../keyboard.c **** void KeyboardInt(void) __attribute__ ((interrupt ("IRQ")));
  19:../keyboard.c **** 
  20:../keyboard.c **** /*--- Codigo de las funciones ---*/
  21:../keyboard.c **** void keyboard_init()
  22:../keyboard.c **** {
 1967              		.loc 1 22 0
 1968              		.cfi_startproc
 1969              		@ Function supports interworking.
 1970              		@ args = 0, pretend = 0, frame = 0
 1971              		@ frame_needed = 1, uses_anonymous_args = 0
 1972 0000 0DC0A0E1 		mov	ip, sp
 1973              	.LCFI0:
 1974              		.cfi_def_cfa_register 12
 1975 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1976 0008 04B04CE2 		sub	fp, ip, #4
 1977              		.cfi_offset 14, -8
 1978              		.cfi_offset 13, -12
 1979              		.cfi_offset 11, -16
 1980              	.LCFI1:
 1981              		.cfi_def_cfa 11, 4
  23:../keyboard.c **** 	/* Configurar el puerto G (si no lo estuviese ya) */	
  24:../keyboard.c **** 		// Establece la funcion de los pines (EINT0-7)
  25:../keyboard.c **** 		rPCONG = rPCONG | 0xC;
 1982              		.loc 1 25 0
 1983 000c 50309FE5 		ldr	r3, .L2
 1984 0010 4C209FE5 		ldr	r2, .L2
 1985 0014 002092E5 		ldr	r2, [r2, #0]
 1986 0018 0C2082E3 		orr	r2, r2, #12
 1987 001c 002083E5 		str	r2, [r3, #0]
  26:../keyboard.c **** 
  27:../keyboard.c **** 		// Habilita el "pull up" del puerto
  28:../keyboard.c **** 		rPUPG = 0x0;
 1988              		.loc 1 28 0
 1989 0020 40309FE5 		ldr	r3, .L2+4
 1990 0024 0020A0E3 		mov	r2, #0
 1991 0028 002083E5 		str	r2, [r3, #0]
  29:../keyboard.c **** 
  30:../keyboard.c **** 		// Configura las lineas de int. como de flanco de bajada mediante EXTINT
  31:../keyboard.c **** 		rEXTINT = rEXTINT | 0x00000030;
 1992              		.loc 1 31 0
 1993 002c 38309FE5 		ldr	r3, .L2+8
 1994 0030 34209FE5 		ldr	r2, .L2+8
 1995 0034 002092E5 		ldr	r2, [r2, #0]
 1996 0038 302082E3 		orr	r2, r2, #48
 1997 003c 002083E5 		str	r2, [r3, #0]
  32:../keyboard.c **** 
  33:../keyboard.c **** 		/* Establece la rutina de servicio para EINT1 */
  34:../keyboard.c **** 		pISR_EINT1 = (unsigned) KeyboardInt;
 1998              		.loc 1 34 0
 1999 0040 28309FE5 		ldr	r3, .L2+12
 2000 0044 28209FE5 		ldr	r2, .L2+16
 2001 0048 002083E5 		str	r2, [r3, #0]
  35:../keyboard.c **** 
  36:../keyboard.c **** 		// Borra INTPND escribiendo 1s en I_ISPC
  37:../keyboard.c **** 		rI_ISPC = BIT_EINT1;
 2002              		.loc 1 37 0
 2003 004c 24309FE5 		ldr	r3, .L2+20
 2004 0050 0124A0E3 		mov	r2, #16777216
 2005 0054 002083E5 		str	r2, [r3, #0]
  38:../keyboard.c **** 
  39:../keyboard.c **** }
 2006              		.loc 1 39 0
 2007 0058 0CD04BE2 		sub	sp, fp, #12
 2008 005c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2009 0060 1EFF2FE1 		bx	lr
 2010              	.L3:
 2011              		.align	2
 2012              	.L2:
 2013 0064 4000D201 		.word	30539840
 2014 0068 4800D201 		.word	30539848
 2015 006c 5000D201 		.word	30539856
 2016 0070 80FF7F0C 		.word	209715072
 2017 0074 00000000 		.word	KeyboardInt
 2018 0078 2400E001 		.word	31457316
 2019              		.cfi_endproc
 2020              	.LFE0:
 2022              		.align	2
 2023              		.global	keyboard_activar
 2025              	keyboard_activar:
 2026              	.LFB1:
  40:../keyboard.c **** 
  41:../keyboard.c **** void keyboard_activar(){
 2027              		.loc 1 41 0
 2028              		.cfi_startproc
 2029              		@ Function supports interworking.
 2030              		@ args = 0, pretend = 0, frame = 0
 2031              		@ frame_needed = 1, uses_anonymous_args = 0
 2032 007c 0DC0A0E1 		mov	ip, sp
 2033              	.LCFI2:
 2034              		.cfi_def_cfa_register 12
 2035 0080 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2036 0084 04B04CE2 		sub	fp, ip, #4
 2037              		.cfi_offset 14, -8
 2038              		.cfi_offset 13, -12
 2039              		.cfi_offset 11, -16
 2040              	.LCFI3:
 2041              		.cfi_def_cfa 11, 4
  42:../keyboard.c **** 	//borrar interrupciones pendientes
  43:../keyboard.c **** 	rI_ISPC = BIT_EINT1;
 2042              		.loc 1 43 0
 2043 0088 30309FE5 		ldr	r3, .L5
 2044 008c 0124A0E3 		mov	r2, #16777216
 2045 0090 002083E5 		str	r2, [r3, #0]
  44:../keyboard.c **** 
  45:../keyboard.c **** 	// Habilitar linea EINT1
  46:../keyboard.c **** 	rINTMSK = rINTMSK & ~( BIT_EINT1 );
 2046              		.loc 1 46 0
 2047 0094 28309FE5 		ldr	r3, .L5+4
 2048 0098 24209FE5 		ldr	r2, .L5+4
 2049 009c 002092E5 		ldr	r2, [r2, #0]
 2050 00a0 0124C2E3 		bic	r2, r2, #16777216
 2051 00a4 002083E5 		str	r2, [r3, #0]
  47:../keyboard.c **** 
  48:../keyboard.c **** 	//borrar interrupciones pendientes
  49:../keyboard.c **** 	rI_ISPC = BIT_EINT1;
 2052              		.loc 1 49 0
 2053 00a8 10309FE5 		ldr	r3, .L5
 2054 00ac 0124A0E3 		mov	r2, #16777216
 2055 00b0 002083E5 		str	r2, [r3, #0]
  50:../keyboard.c **** }
 2056              		.loc 1 50 0
 2057 00b4 0CD04BE2 		sub	sp, fp, #12
 2058 00b8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2059 00bc 1EFF2FE1 		bx	lr
 2060              	.L6:
 2061              		.align	2
 2062              	.L5:
 2063 00c0 2400E001 		.word	31457316
 2064 00c4 0C00E001 		.word	31457292
 2065              		.cfi_endproc
 2066              	.LFE1:
 2068              		.align	2
 2069              		.global	keyboard_desactivar
 2071              	keyboard_desactivar:
 2072              	.LFB2:
  51:../keyboard.c **** 
  52:../keyboard.c **** void keyboard_desactivar(){
 2073              		.loc 1 52 0
 2074              		.cfi_startproc
 2075              		@ Function supports interworking.
 2076              		@ args = 0, pretend = 0, frame = 0
 2077              		@ frame_needed = 1, uses_anonymous_args = 0
 2078 00c8 0DC0A0E1 		mov	ip, sp
 2079              	.LCFI4:
 2080              		.cfi_def_cfa_register 12
 2081 00cc 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2082 00d0 04B04CE2 		sub	fp, ip, #4
 2083              		.cfi_offset 14, -8
 2084              		.cfi_offset 13, -12
 2085              		.cfi_offset 11, -16
 2086              	.LCFI5:
 2087              		.cfi_def_cfa 11, 4
  53:../keyboard.c **** 	// Desabilitar linea EINT1
  54:../keyboard.c **** 	rINTMSK = rINTMSK | BIT_EINT1;
 2088              		.loc 1 54 0
 2089 00d4 24309FE5 		ldr	r3, .L8
 2090 00d8 20209FE5 		ldr	r2, .L8
 2091 00dc 002092E5 		ldr	r2, [r2, #0]
 2092 00e0 012482E3 		orr	r2, r2, #16777216
 2093 00e4 002083E5 		str	r2, [r3, #0]
  55:../keyboard.c **** 
  56:../keyboard.c **** 	//borrar interrupciones pendientes
  57:../keyboard.c **** 	rI_ISPC = BIT_EINT1;
 2094              		.loc 1 57 0
 2095 00e8 14309FE5 		ldr	r3, .L8+4
 2096 00ec 0124A0E3 		mov	r2, #16777216
 2097 00f0 002083E5 		str	r2, [r3, #0]
  58:../keyboard.c **** }
 2098              		.loc 1 58 0
 2099 00f4 0CD04BE2 		sub	sp, fp, #12
 2100 00f8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2101 00fc 1EFF2FE1 		bx	lr
 2102              	.L9:
 2103              		.align	2
 2104              	.L8:
 2105 0100 0C00E001 		.word	31457292
 2106 0104 2400E001 		.word	31457316
 2107              		.cfi_endproc
 2108              	.LFE2:
 2110              		.align	2
 2111              		.global	KeyboardInt
 2113              	KeyboardInt:
 2114              	.LFB3:
  59:../keyboard.c **** 
  60:../keyboard.c **** 
  61:../keyboard.c **** void KeyboardInt(void)
  62:../keyboard.c **** {
 2115              		.loc 1 62 0
 2116              		.cfi_startproc
 2117              		@ Interrupt Service Routine.
 2118              		@ args = 0, pretend = 0, frame = 8
 2119              		@ frame_needed = 1, uses_anonymous_args = 0
 2120 0108 04C02DE5 		str	ip, [sp, #-4]!
 2121 010c 0DC0A0E1 		mov	ip, sp
 2122              	.LCFI6:
 2123              		.cfi_def_cfa_register 12
 2124 0110 0FD82DE9 		stmfd	sp!, {r0, r1, r2, r3, fp, ip, lr, pc}
 2125 0114 04B04CE2 		sub	fp, ip, #4
 2126              		.cfi_offset 14, -8
 2127              		.cfi_offset 13, -12
 2128              		.cfi_offset 11, -16
 2129              		.cfi_offset 3, -20
 2130              		.cfi_offset 2, -24
 2131              		.cfi_offset 1, -28
 2132              		.cfi_offset 0, -32
 2133              	.LCFI7:
 2134              		.cfi_def_cfa 11, 4
 2135 0118 08D04DE2 		sub	sp, sp, #8
  63:../keyboard.c **** 	/* Esperar trp mediante la funcion DelayMs()*/
  64:../keyboard.c **** 	DelayMs(20);//trp=20ms
 2136              		.loc 1 64 0
 2137 011c 1400A0E3 		mov	r0, #20
 2138 0120 FEFFFFEB 		bl	DelayMs
  65:../keyboard.c **** 
  66:../keyboard.c **** 	/* Identificar la tecla */
  67:../keyboard.c **** 	int key = key_read();
 2139              		.loc 1 67 0
 2140 0124 FEFFFFEB 		bl	key_read
 2141 0128 20000BE5 		str	r0, [fp, #-32]
  68:../keyboard.c **** 	/* Si la tecla se ha identificado, visualizarla en el 8SEG*/
  69:../keyboard.c **** 	if(key > -1)
 2142              		.loc 1 69 0
 2143 012c 20301BE5 		ldr	r3, [fp, #-32]
 2144 0130 000053E3 		cmp	r3, #0
 2145 0134 020000BA 		blt	.L13
  70:../keyboard.c **** 	{
  71:../keyboard.c **** 		D8Led_symbol(key);
 2146              		.loc 1 71 0
 2147 0138 20001BE5 		ldr	r0, [fp, #-32]
 2148 013c FEFFFFEB 		bl	D8Led_symbol
  72:../keyboard.c **** 	}
  73:../keyboard.c **** 
  74:../keyboard.c **** 	/* Esperar a se libere la tecla: consultar bit 1 del registro de datos del puerto G */
  75:../keyboard.c **** 	while (!(rPDATG & 0x2)){
 2149              		.loc 1 75 0
 2150 0140 000000EA 		b	.L12
 2151              	.L13:
 2152 0144 0000A0E1 		mov	r0, r0	@ nop
 2153              	.L12:
 2154              		.loc 1 75 0 is_stmt 0 discriminator 1
 2155 0148 30309FE5 		ldr	r3, .L14
 2156 014c 003093E5 		ldr	r3, [r3, #0]
 2157 0150 023003E2 		and	r3, r3, #2
 2158 0154 000053E3 		cmp	r3, #0
 2159 0158 FAFFFF0A 		beq	.L12
  76:../keyboard.c **** 		//NOTHING
  77:../keyboard.c **** 	}
  78:../keyboard.c **** 	//D8Led_symbol(14);
  79:../keyboard.c **** 	/* Esperar trd mediante la funcion Delay() */
  80:../keyboard.c **** 	DelayMs(100);//trd=100ms
 2160              		.loc 1 80 0 is_stmt 1
 2161 015c 6400A0E3 		mov	r0, #100
 2162 0160 FEFFFFEB 		bl	DelayMs
  81:../keyboard.c **** 	/* Borrar interrupción de teclado */
  82:../keyboard.c **** 	rI_ISPC = BIT_EINT1;
 2163              		.loc 1 82 0
 2164 0164 18309FE5 		ldr	r3, .L14+4
 2165 0168 0124A0E3 		mov	r2, #16777216
 2166 016c 002083E5 		str	r2, [r3, #0]
  83:../keyboard.c **** }
 2167              		.loc 1 83 0
 2168 0170 1CD04BE2 		sub	sp, fp, #28
 2169 0174 0F689DE8 		ldmfd	sp, {r0, r1, r2, r3, fp, sp, lr}
 2170 0178 04C09DE4 		ldmfd	sp!, {ip}
 2171 017c 04F05EE2 		subs	pc, lr, #4
 2172              	.L15:
 2173              		.align	2
 2174              	.L14:
 2175 0180 4400D201 		.word	30539844
 2176 0184 2400E001 		.word	31457316
 2177              		.cfi_endproc
 2178              	.LFE3:
 2180              		.align	2
 2181              		.global	key_read
 2183              	key_read:
 2184              	.LFB4:
  84:../keyboard.c **** int key_read()
  85:../keyboard.c **** {
 2185              		.loc 1 85 0
 2186              		.cfi_startproc
 2187              		@ Function supports interworking.
 2188              		@ args = 0, pretend = 0, frame = 32
 2189              		@ frame_needed = 1, uses_anonymous_args = 0
 2190 0188 0DC0A0E1 		mov	ip, sp
 2191              	.LCFI8:
 2192              		.cfi_def_cfa_register 12
 2193 018c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2194 0190 04B04CE2 		sub	fp, ip, #4
 2195              		.cfi_offset 14, -8
 2196              		.cfi_offset 13, -12
 2197              		.cfi_offset 11, -16
 2198              	.LCFI9:
 2199              		.cfi_def_cfa 11, 4
 2200 0194 20D04DE2 		sub	sp, sp, #32
  86:../keyboard.c **** 	short int i;
  87:../keyboard.c **** 
  88:../keyboard.c **** 	int value= -1;
 2201              		.loc 1 88 0
 2202 0198 0030E0E3 		mvn	r3, #0
 2203 019c 14300BE5 		str	r3, [fp, #-20]
  89:../keyboard.c **** 	char temp;
  90:../keyboard.c **** 	// Identificar la tecla mediante ''scanning''
  91:../keyboard.c **** 	// Si la identificación falla la función debe devolver -1
  92:../keyboard.c **** 
  93:../keyboard.c **** 	unsigned int offset[4] = {0xFD,0xFB,0xF7,0xEF};
 2204              		.loc 1 93 0
 2205 01a0 F8309FE5 		ldr	r3, .L25
 2206 01a4 28C04BE2 		sub	ip, fp, #40
 2207 01a8 0F0093E8 		ldmia	r3, {r0, r1, r2, r3}
 2208 01ac 0F008CE8 		stmia	ip, {r0, r1, r2, r3}
  94:../keyboard.c **** 
  95:../keyboard.c **** 	for(i=0; i<4; i++){
 2209              		.loc 1 95 0
 2210 01b0 0030A0E3 		mov	r3, #0
 2211 01b4 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 2212 01b8 300000EA 		b	.L17
 2213              	.L24:
  96:../keyboard.c **** 		temp = *(keyboard_base + (offset[i])) & KEY_VALUE_MASK;
 2214              		.loc 1 96 0
 2215 01bc E0309FE5 		ldr	r3, .L25+4
 2216 01c0 002093E5 		ldr	r2, [r3, #0]
 2217 01c4 FE105BE1 		ldrsh	r1, [fp, #-14]
 2218 01c8 1B30E0E3 		mvn	r3, #27
 2219 01cc 0111A0E1 		mov	r1, r1, asl #2
 2220 01d0 0C004BE2 		sub	r0, fp, #12
 2221 01d4 011080E0 		add	r1, r0, r1
 2222 01d8 033081E0 		add	r3, r1, r3
 2223 01dc 003093E5 		ldr	r3, [r3, #0]
 2224 01e0 033082E0 		add	r3, r2, r3
 2225 01e4 0030D3E5 		ldrb	r3, [r3, #0]
 2226 01e8 FF3003E2 		and	r3, r3, #255
 2227 01ec 0F3003E2 		and	r3, r3, #15
 2228 01f0 15304BE5 		strb	r3, [fp, #-21]
  97:../keyboard.c **** 
  98:../keyboard.c **** 		switch (temp) {
 2229              		.loc 1 98 0
 2230 01f4 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 2231 01f8 073043E2 		sub	r3, r3, #7
 2232 01fc 070053E3 		cmp	r3, #7
 2233 0200 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 2234 0204 1A0000EA 		b	.L18
 2235              	.L23:
 2236 0208 28020000 		.word	.L19
 2237 020c 74020000 		.word	.L18
 2238 0210 74020000 		.word	.L18
 2239 0214 74020000 		.word	.L18
 2240 0218 38020000 		.word	.L20
 2241 021c 74020000 		.word	.L18
 2242 0220 4C020000 		.word	.L21
 2243 0224 60020000 		.word	.L22
 2244              	.L19:
  99:../keyboard.c **** 			case 0x7:  value = 0 + (i*4); break;
 2245              		.loc 1 99 0
 2246 0228 FE305BE1 		ldrsh	r3, [fp, #-14]
 2247 022c 0331A0E1 		mov	r3, r3, asl #2
 2248 0230 14300BE5 		str	r3, [fp, #-20]
 2249 0234 0E0000EA 		b	.L18
 2250              	.L20:
 100:../keyboard.c **** 			case 0xB:  value = 1 + (i*4); break;
 2251              		.loc 1 100 0
 2252 0238 FE305BE1 		ldrsh	r3, [fp, #-14]
 2253 023c 0331A0E1 		mov	r3, r3, asl #2
 2254 0240 013083E2 		add	r3, r3, #1
 2255 0244 14300BE5 		str	r3, [fp, #-20]
 2256 0248 090000EA 		b	.L18
 2257              	.L21:
 101:../keyboard.c **** 			case 0xD:  value = 2 + (i*4); break;
 2258              		.loc 1 101 0
 2259 024c FE305BE1 		ldrsh	r3, [fp, #-14]
 2260 0250 0331A0E1 		mov	r3, r3, asl #2
 2261 0254 023083E2 		add	r3, r3, #2
 2262 0258 14300BE5 		str	r3, [fp, #-20]
 2263 025c 040000EA 		b	.L18
 2264              	.L22:
 102:../keyboard.c **** 			case 0xE:  value = 3 + (i*4); break;
 2265              		.loc 1 102 0
 2266 0260 FE305BE1 		ldrsh	r3, [fp, #-14]
 2267 0264 0331A0E1 		mov	r3, r3, asl #2
 2268 0268 033083E2 		add	r3, r3, #3
 2269 026c 14300BE5 		str	r3, [fp, #-20]
 2270 0270 0000A0E1 		mov	r0, r0	@ nop
 2271              	.L18:
  95:../keyboard.c **** 	for(i=0; i<4; i++){
 2272              		.loc 1 95 0
 2273 0274 BE305BE1 		ldrh	r3, [fp, #-14]	@ movhi
 2274 0278 013083E2 		add	r3, r3, #1
 2275 027c BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 2276              	.L17:
  95:../keyboard.c **** 	for(i=0; i<4; i++){
 2277              		.loc 1 95 0 is_stmt 0 discriminator 1
 2278 0280 FE305BE1 		ldrsh	r3, [fp, #-14]
 2279 0284 030053E3 		cmp	r3, #3
 2280 0288 CBFFFFDA 		ble	.L24
 103:../keyboard.c **** 		}
 104:../keyboard.c **** 	}
 105:../keyboard.c **** 
 106:../keyboard.c **** 	return value;
 2281              		.loc 1 106 0 is_stmt 1
 2282 028c 14301BE5 		ldr	r3, [fp, #-20]
 107:../keyboard.c **** 
 108:../keyboard.c **** 
 109:../keyboard.c **** }
 2283              		.loc 1 109 0
 2284 0290 0300A0E1 		mov	r0, r3
 2285 0294 0CD04BE2 		sub	sp, fp, #12
 2286 0298 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2287 029c 1EFF2FE1 		bx	lr
 2288              	.L26:
 2289              		.align	2
 2290              	.L25:
 2291 02a0 00000000 		.word	C.0.4725
 2292 02a4 00000000 		.word	keyboard_base
 2293              		.cfi_endproc
 2294              	.LFE4:
 2296              		.section	.rodata
 2297              		.align	2
 2300              	C.0.4725:
 2301 0000 FD000000 		.word	253
 2302 0004 FB000000 		.word	251
 2303 0008 F7000000 		.word	247
 2304 000c EF000000 		.word	239
 2305              		.text
 2306              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 keyboard.c
C:\Users\USUARI~1\AppData\Local\Temp\ccndq1i5.s:1958   .data:00000000 keyboard_base
C:\Users\USUARI~1\AppData\Local\Temp\ccndq1i5.s:1955   .data:00000000 $d
                            *COM*:00000004 key
C:\Users\USUARI~1\AppData\Local\Temp\ccndq1i5.s:1962   .text:00000000 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccndq1i5.s:1965   .text:00000000 keyboard_init
C:\Users\USUARI~1\AppData\Local\Temp\ccndq1i5.s:2013   .text:00000064 $d
C:\Users\USUARI~1\AppData\Local\Temp\ccndq1i5.s:2113   .text:00000108 KeyboardInt
C:\Users\USUARI~1\AppData\Local\Temp\ccndq1i5.s:2022   .text:0000007c $a
C:\Users\USUARI~1\AppData\Local\Temp\ccndq1i5.s:2025   .text:0000007c keyboard_activar
C:\Users\USUARI~1\AppData\Local\Temp\ccndq1i5.s:2063   .text:000000c0 $d
C:\Users\USUARI~1\AppData\Local\Temp\ccndq1i5.s:2068   .text:000000c8 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccndq1i5.s:2071   .text:000000c8 keyboard_desactivar
C:\Users\USUARI~1\AppData\Local\Temp\ccndq1i5.s:2105   .text:00000100 $d
C:\Users\USUARI~1\AppData\Local\Temp\ccndq1i5.s:2110   .text:00000108 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccndq1i5.s:2183   .text:00000188 key_read
C:\Users\USUARI~1\AppData\Local\Temp\ccndq1i5.s:2175   .text:00000180 $d
C:\Users\USUARI~1\AppData\Local\Temp\ccndq1i5.s:2180   .text:00000188 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccndq1i5.s:2236   .text:00000208 $d
C:\Users\USUARI~1\AppData\Local\Temp\ccndq1i5.s:2246   .text:00000228 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccndq1i5.s:2291   .text:000002a0 $d
C:\Users\USUARI~1\AppData\Local\Temp\ccndq1i5.s:2300   .rodata:00000000 C.0.4725
C:\Users\USUARI~1\AppData\Local\Temp\ccndq1i5.s:2297   .rodata:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
DelayMs
D8Led_symbol
